"---------------------------vim set start-----------------------------
set tabstop=4 "画面上でタブ文字が占める幅
set shiftwidth=4 "自動インデントでずれる幅
set softtabstop=4 "連続した空白に対してタブキーやバックスペースキーでカーソルが動く幅
set autoindent "改行時に前の行のインデントを継続する
set smartindent "改行時に入力された行の末尾に合わせて次の行のインデントを増減する
set autowrite "自動ファイル保存。:GoBuildコマンドを実行したときに、自動でファイルを保存してBuildする
let mapleader = "\<Space>"
set showcmd "leaderキーを押した時に、右下に表示
let g:go_list_type = "quickfix" "ロケーションリストをquickfixに表示する
let g:go_highlight_types = 1
let g:go_highlight_functions = 1
let g:go_highlight_function_calls = 1
let g:go_metalinter_autosave = 1
set backspace=indent,eol,start "BackSpaceが効かない問題に対応
autocmd FileType go nmap <Leader>i <Plug>(go-info)
"---------------------------vim set end-------------------------------

"---------------------------key map vim-go start----------------------
map <C-n> :cnext<CR> 
map <C-m> :cprevious<CR>

" 補完時に自動入力しない
inoremap <buffer> <C-X><C-O> <C-X><C-O><C-P>
nnoremap <leader>a :cclose<CR>
nnoremap <leader>d :GoDoc<CR>
autocmd FileType go nmap <leader>b  <Plug>(go-build)
autocmd FileType go nmap <leader>r  <Plug>(go-run)
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
"---------------------------key map vim-go end------------------------

"---------------------------auto paste start--------------------------
if &term =~ "xterm"
    let &t_ti .= "\e[?2004h"
    let &t_te .= "\e[?2004l"
    let &pastetoggle = "\e[201~"

    function XTermPasteBegin(ret)
        set paste
        return a:ret
    endfunction

    noremap <special> <expr> <Esc>[200~ XTermPasteBegin("0i")
    inoremap <special> <expr> <Esc>[200~ XTermPasteBegin("")
    cnoremap <special> <Esc>[200~ <nop>
    cnoremap <special> <Esc>[201~ <nop>
endif
"---------------------------auto paste end----------------------------

"---------------------------NeoBundle start---------------------------
" Note: Skip initialization for vim-tiny or vim-small.
if 0 | endif

" 起動時にruntimepathにNeoBundleのパスを追加する
if has('vim_starting')
   if &compatible
      set nocompatible               " Be iMproved
   endif

  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

" NeoBundle設定の開始
call neobundle#begin(expand('~/.vim/bundle/'))

" NeoBundleのバージョンをNeoBundle自身で管理する
NeoBundleFetch 'Shougo/neobundle.vim'


" インストールしたいプラグインを記述
" 下記は unite.vimというプラグインをインストールする例
" NeoBundle 'Shougo/unite.vim'

" NeoBundle 'w0ng/vim-hybrid'
NeoBundle 'fatih/vim-go'
NeoBundle 'ctrlpvim/ctrlp.vim'
NeoBundle 'cohama/lexima.vim'
"NeoBundle 'SirVer/ultisnips'
NeoBundle 'Shougo/neosnippet'
NeoBundle 'Shougo/neosnippet-snippets'

" NeoBundle設定の終了
call neobundle#end()

filetype plugin indent on

" vim起動時に未インストールのプラグインをインストールする
NeoBundleCheck
"---------------------------NeoBundle end-----------------------------


let g:neosnippet#snippets_directory='~/dotfiles/neosnippet-snippets/'


"---------------------------color hybrid start------------------------
syntax on 
set t_Co=256
set background=dark 
" colorscheme hybrid
"---------------------------color hybrid end------------------------
